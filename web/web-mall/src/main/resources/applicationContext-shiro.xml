<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager"/>
    <property name="loginUrl" value="/login.jsp"/>
    <property name="successUrl" value="/index/main.html"/>
    <property name="unauthorizedUrl" value="/common/unauthorized.j"/>
    <property name="filters">
      <map>
        <entry key="authc" value-ref="formAuthenticationFilter"/>
        <entry key="logout" value-ref="logoutFilter"/>
      </map>
    </property>
    <property name="filterChainDefinitions">
      <value>
        /res/** = anon
        /common/captcha.j = anon
        /**/upload_file_b.aj = anon
        /logout.html = logout
        /login.jsp = authc
        /userinfo/** = authc
      </value>
    </property>
  </bean>

  <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    <property name="hashAlgorithmName" value="MD5"/>
    <property name="hashIterations" value="2"/>
    <property name="storedCredentialsHexEncoded" value="true"/>
  </bean>

  <bean class="com.shareniu.mall.shiro.realm.UserRealm" id="userRealm">
    <property name="credentialsMatcher" ref="credentialsMatcher"/>
    <property name="cachingEnabled" value="false"/>
    <property name="userProvider" ref="userProviderImpl"/>
  </bean>

  <bean class="com.shareniu.mall.shiro.filters.AuthenticationFilter" id="formAuthenticationFilter">
    <property name="usernameParam" value="username"/>
    <property name="passwordParam" value="password"/>
    <property name="callbackKeyAttribute" value="ReturnUrl"/>
    <property name="loginUrl" value="/login.jsp"/>
    <property name="enabled" value="true"/>
    <property name="userProvider" ref="userProviderImpl"/>
  </bean>
    
  <bean class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" id="securityManager">
    <property name="realm" ref="userRealm"/>
    <property name="sessionManager" ref="sessionManager"/>
  </bean>

  <bean class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager" id="sessionManager">
    <property name="globalSessionTimeout" value="1800000"/>
    <property name="deleteInvalidSessions" value="true"/>
    <property name="sessionIdCookieEnabled" value="true"/>
    <property name="sessionIdCookie" ref="sessionIdCookie"/>
    <property name="sessionDAO" ref="sessionDAO"/>
    <property name="sessionValidationSchedulerEnabled" value="true"/>
    <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
  </bean>

  <bean class="com.shareniu.mall.shiro.quartz2.Quartz2SessionValidationScheduler" id="sessionValidationScheduler" destroy-method="disableSessionValidation">
    <property name="sessionManager" ref="sessionManager"/>
    <property name="sessionValidationInterval" value="1000000"/>
  </bean>

  <bean class="org.apache.shiro.web.servlet.SimpleCookie" id="sessionIdCookie">
    <constructor-arg value="sid"/>
    <property name="httpOnly" value="true"/>
    <property name="maxAge" value="1800000"/>
    <property name="version" value="1"/>
  </bean>


  <bean class="com.shareniu.mall.shiro.redis.RedisSessionDao" id="sessionDAO">
    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    <property name="cacheManager" ref="redisCacheManager"/>
  </bean>

  <bean class="com.shareniu.mall.shiro.redis.RedisCacheManager" id="redisCacheManager">
    <property name="expire" value="1800000"/>
    <property name="redisClientTemplate" ref="redisClientTemplateImpl"/>
  </bean>

  <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
    <property name="arguments" ref="securityManager"/>
  </bean>

  <bean id="logoutFilter" class="com.shareniu.mall.shiro.filters.MyLogoutFilter">
    <property name="redirectUrl" value="/index/main.html"/>
    <property name="redisSessionManager" ref="redisSessionMangerImpl"/>
  </bean>

  <bean id="userProviderImpl" class="com.shareniu.mall.shiro.user.DefaultUserProvider"/>
</beans>